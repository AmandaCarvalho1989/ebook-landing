---
import { Image, getImage } from "astro:assets";
import { questions } from "../constants/questions";
import plusIcon from "../images/svg/plus.svg";
import minusIcon from "../images/svg/minus.svg";
---

<div class="questions">
  {
    questions.map((item, index) => {
      return (
        <div class="question">
          <div class="question-header">
            <strong>{item.question} </strong>
            <button class="toggle-question">
              <Image
                loading="lazy"
                class={`question-icon question-icon-${index}`}
                alt="Open answer"
                width="24"
                src={plusIcon}
              />
              <Image
                loading="lazy"
                class={`question-icon question-icon-${index} hidden`}
                alt="Close answer"
                width="24"
                src={minusIcon}
              />
            </button>
          </div>
          <p id={`answer-${index}`}>{item.answer}</p>
        </div>
      );
    })
  }
</div>

<script>
  // @ts-nocheck
  const toggleAnswer = (index) => {
    const answer = document.getElementById(`answer-${index}`);
    const icons = document.querySelectorAll(`.question-icon-${index}`);

    icons.forEach((icon) => icon.classList.toggle("hidden"));

    if (answer.style.maxHeight) {
      answer.style.maxHeight = null;
    } else {
      answer.style.maxHeight = answer.scrollHeight + "px";
    }
  };

  document.querySelectorAll(".toggle-question").forEach((element, index) => {
    element.addEventListener("click", () => {
      toggleAnswer(index);
    });
  });

  window.onload = () => {
    toggleAnswer(0);
};

</script>

<style lang="scss">
  div.questions {
    flex: 1;
    button {
      padding: 0;
      width: auto;
      height: auto;
      background-color: transparent;
    }
    div.question {
      margin-bottom: 1.5rem;
      div.question-header {
        display: flex;
        width: 100%;
        justify-content: space-between;
      }

      img.question-icon {
        transition: 0.5s ease-in-out;
      }

      img.hidden {
        display: none;
      }

      p {
        transition: max-height 0.5s ease-in-out;
        max-height: 0px;
        overflow: hidden;
      }
      &:not(:first-child) p {
        overflow: hidden;
        max-height: 0px;
        transition: max-height 0.5s ease-in-out;
      }
    }
  }
</style>
